package com.rest.domain;
// Generated Feb 26, 2018 8:43:55 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonManagedReference;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

/**
 * SellerRequest generated by hbm2java
 */
@Entity
@Table(name = "seller_request", catalog = "ifAR")
public class SellerRequest implements java.io.Serializable {

	private Integer id;
	private UserAccount userAccount;
	private int status;
	private byte[] imageSet;
	private String publicLink;
	private int width;
	private int length;
	private int height;
	private Date createdAt;
	private Date updatedAt;
	private String rejectReason;
	private Set<Model> models = new HashSet<Model>(0);

	public SellerRequest() {
	}

	public SellerRequest(UserAccount userAccount, int status, String publicLink, int width, int length, int height,
			Date createdAt, Date updatedAt) {
		this.userAccount = userAccount;
		this.status = status;
		this.publicLink = publicLink;
		this.width = width;
		this.length = length;
		this.height = height;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public SellerRequest(UserAccount userAccount, int status, byte[] imageSet, String publicLink, int width, int length,
			int height, Date createdAt, Date updatedAt, String rejectReason, Set<Model> models) {
		this.userAccount = userAccount;
		this.status = status;
		this.imageSet = imageSet;
		this.publicLink = publicLink;
		this.width = width;
		this.length = length;
		this.height = height;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.rejectReason = rejectReason;
		this.models = models;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade = CascadeType.ALL)
//	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "username")
	@JsonManagedReference
	@JoinColumn(name = "user_account_username", nullable = false)
	public UserAccount getUserAccount() {
		return this.userAccount;
	}

	public void setUserAccount(UserAccount userAccount) {
		this.userAccount = userAccount;
	}

	@Column(name = "status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "image_set")
	public byte[] getImageSet() {
		return this.imageSet;
	}

	public void setImageSet(byte[] imageSet) {
		this.imageSet = imageSet;
	}

	@Column(name = "public_link", nullable = false, length = 250)
	public String getPublicLink() {
		return this.publicLink;
	}

	public void setPublicLink(String publicLink) {
		this.publicLink = publicLink;
	}

	@Column(name = "width", nullable = false)
	public int getWidth() {
		return this.width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	@Column(name = "length", nullable = false)
	public int getLength() {
		return this.length;
	}

	public void setLength(int length) {
		this.length = length;
	}

	@Column(name = "height", nullable = false)
	public int getHeight() {
		return this.height;
	}

	public void setHeight(int height) {
		this.height = height;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy HH:mm:ss")
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "dd-MM-yyyy HH:mm:ss")
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "reject_reason", length = 250)
	public String getRejectReason() {
		return this.rejectReason;
	}

	public void setRejectReason(String rejectReason) {
		this.rejectReason = rejectReason;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sellerRequest",cascade = CascadeType.ALL)
	@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
	public Set<Model> getModels() {
		return this.models;
	}

	public void setModels(Set<Model> models) {
		this.models = models;
	}

}
